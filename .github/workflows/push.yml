name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  black-formatting-check:
    name: Check formatting
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: psf/black@stable

  build:
    runs-on: ubuntu-latest
    needs: black-formatting-check

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python 3
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      # - name: Cache Poetry
      #   id: cache-poetry
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.poetry
      #     key: poetry_
      - name: Install latest version of Poetry
        #   if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
      # - name: Add Poetry to $PATH
      #   run: |
      #     echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Show Poetry version
        run: poetry --version
      - name: Check pyproject.toml validity
        run: poetry check --no-interaction
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.venv
          key: venv-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cache-dependencies.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
          poetry show
      - name: Run tests
        run: poetry run coverage run -m pytest
      - name: Build
        run: poetry build
      - name: Coveralls
        uses: AndreMiras/coveralls-python-action@develop
